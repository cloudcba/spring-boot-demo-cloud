<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neo.dao.BrandDao">

    <resultMap type="com.neo.entity.Brand" id="BrandMap">
        <result property="bid" column="bid" jdbcType="INTEGER"/>
        <result property="bname" column="bname" jdbcType="VARCHAR"/>
        <result property="ctime" column="ctime" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="BrandMap">
        select
          bid, bname, ctime
        from brand
        where bid = #{bid}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="BrandMap">
        select
          bid, bname, ctime
        from test.brand
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="BrandMap">
        select
        bid, bname, ctime
        from test.brand
        <where>
            <if test="bid != null">
                and bid = #{bid}
            </if>
            <if test="bname != null and bname != ''">
                and bname = #{bname}
            </if>
            <if test="ctime != null and ctime != ''">
                and ctime = #{ctime}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="bid" useGeneratedKeys="true">
        insert into test.brand(bname, ctime)
        values (#{bname}, #{ctime})
    </insert>

    <insert id="insertBatch" keyProperty="bid" useGeneratedKeys="true">
        insert into test.brand(bname, ctime)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.bname}, #{entity.ctime})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="bid" useGeneratedKeys="true">
        insert into test.brand(bname, ctime)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.bname}, #{entity.ctime})
        </foreach>
        on duplicate key update
        bname = values(bname) , ctime = values(ctime)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update test.brand
        <set>
            <if test="bname != null and bname != ''">
                bname = #{bname},
            </if>
            <if test="ctime != null and ctime != ''">
                ctime = #{ctime},
            </if>
        </set>
        where bid = #{bid}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from test.brand where bid = #{bid}
    </delete>

</mapper>